
type List 
  | Nill ()
  | Cons (Int)


type Number = Float

fun testList(l: List): Int = 1


#
# const ala: Int = 
#   1 + 1
# 
# const l: List = Nill ()
# 
# const alaName: String = 
#   "ala ma kota" 
# 
# const something: Int = 
#   case l 
#     of Nill () -> 0
#     of Cons (i) -> i
# 
# fun bela(a: Int, b: Int): (Int -> Int -> Int) = 1
# 
# const haha: String = 
#   let
#     fun stringer(str: String): String = 
#       str + " ala ma kota"
#   in
#     stringer("hahahah")
# 
# fun hoff(a: Int, b: Int): Int = 
#   fun1 .> fun2 .> fun3 .> fun4

const ala: Int = 1
const bela: String = "ala ma kota"
const cela: Bool = True
const dela: Float = .4444

fun hoff(a: Float, b: Float): Float = 
  1.

fun hoff2(a: Number, b: Number): Number = 
  2.